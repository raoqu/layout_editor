/* Combined styles for react-grid-layout and react-resizable */

/* React Grid Layout Styles */
.react-grid-layout {
  position: relative;
  transition: height 200ms ease;
}

.react-grid-item {
  transition: all 200ms ease;
  transition-property: left, top, width, height;
}

.react-grid-item.cssTransforms {
  transition-property: transform, width, height;
}

.react-grid-item.resizing {
  z-index: 1;
  will-change: width, height;
}

.react-grid-item.react-draggable-dragging {
  transition: none;
  z-index: 3;
  will-change: transform;
}

.react-grid-item.react-grid-placeholder {
  background: rgba(0, 0, 0, 0.1);
  border: 2px dashed #1890ff;
  border-radius: 4px;
  transition-duration: 100ms;
  z-index: 2;
  user-select: none;
}

/* React Resizable Styles */
.react-resizable {
  position: relative;
}

.react-resizable-handle {
  position: absolute;
  width: 20px;
  height: 20px;
  bottom: 0;
  right: 0;
  background-image: url('data:image/svg+xml;charset=utf-8,%3Csvg xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 width%3D%226%22 height%3D%226%22%3E%3Cpath d%3D%22M6 6H0V4.2h4.2V0H6v6z%22 fill%3D%22%23999%22%2F%3E%3C%2Fsvg%3E');
  background-position: bottom right;
  padding: 0 3px 3px 0;
  background-repeat: no-repeat;
  background-origin: content-box;
  box-sizing: border-box;
  cursor: se-resize;
}

/* Make default resize handle transparent but still functional */
.editing-mode .react-resizable-handle {
  opacity: 0;
  width: 20px;
  height: 20px;
  z-index: 15;
  pointer-events: auto;
}

/* Custom Widget Styles */
.widget-container {
  position: relative;
  border: 1px solid #e8e8e8;
  border-radius: 4px;
  background-color: #fff;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  transition: box-shadow 0.2s, border-color 0.2s;
  height: 100%;
}

/* Editing mode specific styles */
.editing-mode .widget-container {
  border: 1px dashed #d9d9d9;
}

.widget-container.selected {
  border-color: #1890ff;
  border-style: dashed;
  border-width: 2px;
  box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.5);
}

/* Widget overlay for drag and resize */
.widget-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 10;
  pointer-events: none;
}

.widget-drag-area {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 24px; /* Top drag handle */
  cursor: move;
  pointer-events: auto;
  background-color: rgba(24, 144, 255, 0.3);
  border-bottom: 1px dashed rgba(24, 144, 255, 0.3);
}

/* Additional drag handles on sides */
.widget-drag-area::before,
.widget-drag-area::after {
  content: '';
  position: absolute;
  top: 24px; /* Start below the top handle */
  bottom: 20px; /* Leave space for resize handle */
  width: 8px;
  background-color: rgba(24, 144, 255, 0.3);
  pointer-events: auto;
  border-right: 1px dashed rgba(24, 144, 255, 0.3);
  border-left: 1px dashed rgba(24, 144, 255, 0.3);
}

.widget-drag-area::before {
  left: 0;
}

.widget-drag-area::after {
  right: 0;
}

.widget-resize-area {
  position: absolute;
  width: 20px;
  height: 20px;
  bottom: 0;
  right: 0;
  cursor: se-resize;
  pointer-events: none; /* Let events pass through to the real resize handle */
  background-color: rgba(24, 144, 255, 0.3);
  border-top-left-radius: 4px;
  border-top: 1px dashed rgba(24, 144, 255, 0.3);
  border-left: 1px dashed rgba(24, 144, 255, 0.3);
  z-index: 14; /* Just below the real resize handle */
}

/* Show overlay elements on hover */
.widget-container:hover .widget-drag-area,
.widget-container:hover .widget-resize-area {
  opacity: 0.7;
}

.widget-container.selected .widget-drag-area,
.widget-container.selected .widget-resize-area {
  opacity: 0.7;
}

/* Highlight resize area on hover */
.widget-resize-area:hover {
  background-color: rgba(24, 144, 255, 0.5);
  border-top: 1px dashed rgba(24, 144, 255, 0.7);
  border-left: 1px dashed rgba(24, 144, 255, 0.7);
}

/* Legacy widget-drag-handle for backward compatibility */
.widget-drag-handle {
  display: none;
  cursor: move;
  z-index: 10;
}

/* Make the resize handle more visible on hover */
.react-resizable-handle:hover {
  background-image: url('data:image/svg+xml;charset=utf-8,%3Csvg xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22 width%3D%226%22 height%3D%226%22%3E%3Cpath d%3D%22M6 6H0V4.2h4.2V0H6v6z%22 fill%3D%22%231890ff%22%2F%3E%3C%2Fsvg%3E');
}

/* Adjust widget content to account for drag handle */
.widget-container .widget-content {
  /* padding: 4px; */
  height: 100%;
  overflow: auto;
  position: relative;
  z-index: 5; /* Higher than base elements but lower than overlay interactive elements */
}
